---
- name: Configure Debian LXC Containers
  hosts: "{{ target_node | default('development-pve-1') }}"
  gather_facts: false
  vars:
    container_ip: "{{ container_ip }}"
  tasks:
    - name: Wait for container to be accessible via pct
      ansible.builtin.wait_for:
        timeout: 10

    - name: Install and configure packages on Debian container
      ansible.builtin.shell: |
        pct exec {{ vmid }} -- bash -c "set -o pipefail &&
          apt update &&
          apt upgrade -y &&
          apt install -y bash curl wget nano openssh-server ufw sudo fail2ban qemu-guest-agent &&
          systemctl start ssh &&
          systemctl enable ssh &&
          systemctl enable fail2ban &&
          systemctl start fail2ban &&
          systemctl enable qemu-guest-agent &&
          ufw allow ssh &&
          ufw allow http &&
          ufw allow https &&
          ufw --force enable
        "
      register: container_config
      failed_when: container_config.rc != 0
      changed_when: false

    - name: Add admin user
      ansible.builtin.shell: |
        pct exec {{ vmid }} -- bash -c "set -o pipefail &&
          adduser --disabled-password --gecos '' {{ user_name }} &&
          echo '{{ user_name }}:{{ user_password }}' | chpasswd &&
          usermod -aG sudo {{ user_name }} &&
          passwd -l root &&
          sed -i 's/^# %sudo/%sudo/' /etc/sudoers &&
          echo '{{ user_name }} ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers.d/{{ user_name }} &&
          sed -i 's/^#\?PermitRootLogin.*/PermitRootLogin no/' /etc/ssh/sshd_config
          mkdir -p /home/{{ user_name }}/.ssh &&
          touch /home/{{ user_name }}/.ssh/authorized_keys &&
          chmod 700 /home/{{ user_name }}/.ssh &&
          chmod 600 /home/{{ user_name }}/.ssh/authorized_keys &&
          cp /root/.ssh/authorized_keys /home/{{ user_name }}/.ssh/authorized_keys &&
          chown -R {{ user_name }}:{{ user_name }} /home/{{ user_name }}/.ssh
        "
      register: user_config
      failed_when: user_config.rc != 0
      changed_when: false

    - name: Restart SSH service to apply configuration changes
      ansible.builtin.shell: |
        pct exec {{ vmid }} -- bash -c "systemctl restart ssh"
      register: ssh_restart
      failed_when: ssh_restart.rc != 0
      changed_when: false
